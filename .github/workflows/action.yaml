name: üß¨ Build and Push Docker Image for Vectorial Profiler

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: chaos4455/vectorial-profiler
      VERSION: latest
      DOCKERHUB_USERNAME: chaos4455

    steps:
      - name: üß± Checkout Repository
        uses: actions/checkout@v3

      - name: üßæ Create Dockerfile dynamically
        run: |
          cat <<'EOF' > Dockerfile
          FROM ubuntu:22.04
          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && \
              apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server supervisor && \
              pip3 install --no-cache-dir \
                fastapi \
                uvicorn[standard] \
                pandas \
                numpy \
                matplotlib \
                flask \
                flask_cors \
                schedule \
                requests \
                tqdm \
                rich

          RUN useradd -m -s /bin/bash replika && \
              echo 'replika:replika' | chpasswd && \
              mkdir -p /home/replika/app /var/log/supervisor

          WORKDIR /home/replika/app
          COPY . .

          COPY supervisord.conf /etc/supervisor/supervisord.conf

          CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
          EOF

      - name: ‚öôÔ∏è Create supervisord.conf dynamically
        run: |
          cat <<'EOF' > supervisord.conf
          [supervisord]
          nodaemon=true
          logfile=/var/log/supervisor/supervisord.log
          pidfile=/tmp/supervisord.pid

          [program:gerador]
          command=/bin/bash -c "sleep 10 && python3 /home/replika/app/geraprofilesv3.py || echo '‚ö†Ô∏è Erro esperado no gerador'"
          directory=/home/replika/app
          autostart=true
          autorestart=false
          startsecs=3
          stderr_logfile=/var/log/supervisor/gerador.err.log
          stdout_logfile=/var/log/supervisor/gerador.out.log

          [program:matcher]
          command=python3 /home/replika/app/match-profilerv3-web-dash-full-themes.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          startsecs=3
          stderr_logfile=/var/log/supervisor/matcher.err.log
          stdout_logfile=/var/log/supervisor/matcher.out.log
          EOF

      - name: üê≥ Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üõ†Ô∏è Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:$VERSION .

      - name: üì§ Push Docker Image
        run: |
          docker push $IMAGE_NAME:$VERSION

      - name: üöÄ Deploy & Test Ports
        run: |
          docker run -d --name vectorial_test_container -p 8333:8333 -p 8777:8777 $IMAGE_NAME:$VERSION
          echo '‚è≥ Aguardando 15s para inicializa√ß√£o dos servi√ßos...'
          sleep 15
          echo 'üîç Testando se as portas est√£o respondendo...'
          nc -zv localhost 8333 || echo '‚ö†Ô∏è Porta 8333 n√£o est√° respondendo.'
          nc -zv localhost 8777 || echo '‚ö†Ô∏è Porta 8777 n√£o est√° respondendo.'
          echo '‚úÖ Teste de portas finalizado.'
          echo 'üìú √öltimos logs do supervisord:'
          docker exec vectorial_test_container tail -n 50 /var/log/supervisor/supervisord.log || echo '‚ö†Ô∏è N√£o foi poss√≠vel obter logs.'
          echo 'üìú Logs do gerador:'
          docker exec vectorial_test_container tail -n 50 /var/log/supervisor/gerador.out.log || echo '‚ö†Ô∏è Sem logs.'
          echo 'üìú Logs do matcher:'
          docker exec vectorial_test_container tail -n 50 /var/log/supervisor/matcher.out.log || echo '‚ö†Ô∏è Sem logs.'

      # - name: üè∑Ô∏è Optional: Create and push tag
      #   run: |
      #     git config --global user.name "Elias Andrade - Replika AI"
      #     git config --global user.email "chaos4455@users.noreply.github.com"
      #     git tag RC1-beta-v0001
      #     git push origin --tags
